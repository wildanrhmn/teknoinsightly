generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id          String       @id @default(cuid())
  title       String
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())
  type        String
  body        String
  id_category String
  id_author   String
  summary     String       @default("")
  image       String[]
  popularId   String?      @unique
  swiperId    String?      @unique
  comments    Comment[]
  author      Author       @relation(fields: [id_author], references: [id])
  category    Category     @relation(fields: [id_category], references: [id])
  PopularPost PopularPost? @relation(fields: [popularId], references: [id], onDelete: Cascade)
  Swiper      Swiper?      @relation(fields: [swiperId], references: [id], onDelete: Cascade)
}

model Category {
  id    String @id @default(cuid())
  name  String
  slug  String @unique
  type  String
  posts Post[]
}

model PopularPost {
  id   String @id @default(cuid())
  Post Post?
}

model Author {
  id       String  @id @default(cuid())
  name     String  @unique
  email    String  @unique
  phone    String
  bio      String
  image    String?
  password String  @default("")
  role     String  @default("user")
  posts    Post[]
}

model Contacted {
  id           String  @id @default(cuid())
  name         String
  email        String
  organization String?
  message      String
}

model Comment {
  id         String   @id @default(cuid())
  name       String
  email      String
  website    String?
  message    String
  id_post    String
  created_at DateTime @default(now())
  post       Post     @relation(fields: [id_post], references: [id], onDelete: Cascade)
}

model Swiper {
  id   String @id
  Post Post?
}
